#+TODO: TODO IN-PROGRESS | DONE

* Simple scene graph (ala Java3D) for dlang

** Threading
The implementation tries to enforce proper manipulation of the scene
graph data (meaning changing the graph only from the right (the
rendering) thread). For that each Node is either part of a scene
connected to a renderthread or not. If it is not (yet) connected, one
can do all the changes however one wants, if it is connected the
changes need to be done in the renderThread.

* TODOS
** TODO remove jpgs from git repository
** IN-PROGRESS implement image viewer
** TODO continue opengl33
** TODO framerate e.g. between opengl33 and opengl2
** TODO show camera in scene from "outside"
** TODO add ui (e.g. nuklear or imgui)
** TODO opengl33 textures
** TODO links to nice explanation
** TODO praise learnopengl tutorial
** TODO ask about reference counting
** TODO make textures, normals and so on optional (or switch the vertex shader)

** DONE add camera
  CLOSED: [2021-10-19 Tue 22:51]
  - CLOSING NOTE [2021-10-19 Tue 22:51]
** DONE use cast(Camera)projection
  CLOSED: [2021-10-19 Tue 22:51]
  - CLOSING NOTE [2021-10-19 Tue 22:51]
** DONE add observer movements with camera
  CLOSED: [2021-10-31 Sun 01:29]
  - CLOSING NOTE [2021-10-31 Sun 01:29]
  was momentan da ist ist nicht korrekt ...
  observer hat position und rotation + projection
** DONE play around with std.concurrency and render and sg updatethreads
  CLOSED: [2021-10-31 Sun 01:29]
  - CLOSING NOTE [2021-10-31 Sun 01:29]
